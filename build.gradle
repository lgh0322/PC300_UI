// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"
apply plugin: 'com.alibaba.arouter'

buildscript {
//    ext.kotlin_version = '1.3.50'
//    ext.kotlin_version = '1.3.61'
//    '1.3.50'
//    ext.kotlin_version = '1.3.72'
//    ext.kotlin_version = '1.4.10'
//    ext.kotlin_version = '1.4.21'
//    ext.kotlin_version = '1.5.10'
//    ext.kotlin_version = '1.5.21'
//    ext.kotlin_version = '1.5.31'
//    ext.kotlin_version = '1.6.10'
    ext.kotlin_version = '1.6.21'

    repositories {
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://jitpack.io' }
        maven {url 'https://maven.fabric.io/public'}
        //友盟统计
        maven { url 'https://repo1.maven.org/maven2/' }

        mavenCentral()

        google()

        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'
//        classpath 'com.android.tools.build:gradle:7.0.0'
//        classpath "io.realm:realm-gradle-plugin:5.10.0"
//        classpath "io.realm:realm-gradle-plugin:6.0.2"
        classpath "io.realm:realm-gradle-plugin:10.0.1"
//        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.1'
        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
//        classpath 'com.github.TWiStErRob.butterknife:butterknife-gradle-plugin:fix1431-SNAPSHOT'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
//        classpath 'com.google.android.material:material:1.2.1@aar'
        classpath "com.alibaba:arouter-register:1.0.2"

        classpath 'com.github.xuexiangjys.XAOP:xaop-plugin:1.0.4'

        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        classpath "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

        // Add the Google Services plugin (check for v3.1.2 or higher).
        classpath 'com.google.gms:google-services:4.3.10'

        // Add the Fabric Crashlytics plugin.
//        classpath 'io.fabric.tools:gradle:1.31.2'
        // Add the Crashlytics Gradle plugin (be sure to add version
        // 2.0.0 or later if you built your app with Android Studio 4.1).
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.5.2'
    }
}


allprojects {
    repositories {
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url "https://jitpack.io" }
        //友盟统计
        maven { url 'https://repo1.maven.org/maven2/' }
        mavenCentral()
        google()
        jcenter()
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs += [
                    "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes",
                    "-XXLanguage:+InlineClasses"
            ]
        }
    }


}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// This is to fix the errors : java.lang.NoClassDefFoundError: Failed resolution of: Landroid/view/View$OnUnhandledKeyEventListener;
configurations.all {
//    resolutionStrategy.force'androidx.core:core-ktx:1.3.0'
//    configurations.all {
//        resolutionStrategy.force'androidx.core:core-ktx:1.6.0'
//    }
    resolutionStrategy.eachDependency { details ->
        def requested = details.requested
        if (requested.group == "androidx") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "28.+"
            }
        }
    }
}
